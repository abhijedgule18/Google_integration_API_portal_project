{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abhis\\\\Desktop\\\\Google Integration portal\\\\restaverse\\\\frontend\\\\src\\\\components\\\\Reviews.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { fetchReviews, fetchMockReviews } from '../services/api'; // Combined API service\nimport './Reviews.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Reviews = () => {\n  _s();\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const getReviews = async () => {\n      const token = localStorage.getItem('token');\n      try {\n        const reviewsData = await fetchReviews(token);\n        setReviews(reviewsData);\n      } catch (err) {\n        console.error(\"Failed to fetch reviews from API:\", err);\n        setError(\"Loading mock data...\");\n        try {\n          const mockReviewsData = await fetchMockReviews();\n          setReviews(mockReviewsData);\n        } catch (mockErr) {\n          console.error(\"Failed to fetch mock reviews:\", mockErr);\n          setError(\"Failed to load mock data.\");\n        }\n      }\n    };\n    getReviews();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reviews-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Reviews\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 23\n    }, this), reviews.map(review => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"review-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: review.author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Rating: \", review.rating]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: review.comment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)]\n    }, review.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(Reviews, \"BCWlk8TIyeV7xtCoPZ/4P9bfeSw=\");\n_c = Reviews;\nexport default Reviews;\nvar _c;\n$RefreshReg$(_c, \"Reviews\");","map":{"version":3,"names":["React","useEffect","useState","fetchReviews","fetchMockReviews","jsxDEV","_jsxDEV","Reviews","_s","reviews","setReviews","error","setError","getReviews","token","localStorage","getItem","reviewsData","err","console","mockReviewsData","mockErr","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","review","author","rating","comment","id","_c","$RefreshReg$"],"sources":["C:/Users/abhis/Desktop/Google Integration portal/restaverse/frontend/src/components/Reviews.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { fetchReviews, fetchMockReviews } from '../services/api'; // Combined API service\r\nimport './Reviews.css';\r\n\r\nconst Reviews = () => {\r\n    const [reviews, setReviews] = useState([]);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const getReviews = async () => {\r\n            const token = localStorage.getItem('token');\r\n            try {\r\n                const reviewsData = await fetchReviews(token);\r\n                setReviews(reviewsData);\r\n            } catch (err) {\r\n                console.error(\"Failed to fetch reviews from API:\", err);\r\n                setError(\"Loading mock data...\");\r\n\r\n                try {\r\n                    const mockReviewsData = await fetchMockReviews();\r\n                    setReviews(mockReviewsData);\r\n                } catch (mockErr) {\r\n                    console.error(\"Failed to fetch mock reviews:\", mockErr);\r\n                    setError(\"Failed to load mock data.\");\r\n                }\r\n            }\r\n        };\r\n\r\n        getReviews();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"reviews-container\">\r\n            <h1>Your Reviews</h1>\r\n            {error && <p className=\"error-message\">{error}</p>}\r\n            {reviews.map(review => (\r\n                <div key={review.id} className=\"review-card\">\r\n                    <h3>{review.author}</h3>\r\n                    <p>Rating: {review.rating}</p>\r\n                    <p>{review.comment}</p>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Reviews;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,YAAY,EAAEC,gBAAgB,QAAQ,iBAAiB,CAAC,CAAC;AAClE,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACZ,MAAMY,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAI;QACA,MAAMC,WAAW,GAAG,MAAMd,YAAY,CAACW,KAAK,CAAC;QAC7CJ,UAAU,CAACO,WAAW,CAAC;MAC3B,CAAC,CAAC,OAAOC,GAAG,EAAE;QACVC,OAAO,CAACR,KAAK,CAAC,mCAAmC,EAAEO,GAAG,CAAC;QACvDN,QAAQ,CAAC,sBAAsB,CAAC;QAEhC,IAAI;UACA,MAAMQ,eAAe,GAAG,MAAMhB,gBAAgB,CAAC,CAAC;UAChDM,UAAU,CAACU,eAAe,CAAC;QAC/B,CAAC,CAAC,OAAOC,OAAO,EAAE;UACdF,OAAO,CAACR,KAAK,CAAC,+BAA+B,EAAEU,OAAO,CAAC;UACvDT,QAAQ,CAAC,2BAA2B,CAAC;QACzC;MACJ;IACJ,CAAC;IAEDC,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIP,OAAA;IAAKgB,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAC9BjB,OAAA;MAAAiB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpBhB,KAAK,iBAAIL,OAAA;MAAGgB,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAEZ;IAAK;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjDlB,OAAO,CAACmB,GAAG,CAACC,MAAM,iBACfvB,OAAA;MAAqBgB,SAAS,EAAC,aAAa;MAAAC,QAAA,gBACxCjB,OAAA;QAAAiB,QAAA,EAAKM,MAAM,CAACC;MAAM;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACxBrB,OAAA;QAAAiB,QAAA,GAAG,UAAQ,EAACM,MAAM,CAACE,MAAM;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9BrB,OAAA;QAAAiB,QAAA,EAAIM,MAAM,CAACG;MAAO;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAHjBE,MAAM,CAACI,EAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAId,CACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACnB,EAAA,CAxCID,OAAO;AAAA2B,EAAA,GAAP3B,OAAO;AA0Cb,eAAeA,OAAO;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}