{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abhis\\\\Desktop\\\\Google Integration portal\\\\restaverse\\\\frontend\\\\src\\\\components\\\\ReviewsPage.js\",\n  _s = $RefreshSig$();\n//import React, { useEffect, useState } from 'react';\n//import { fetchReviews } from '../services/api'; // Ensure this is correctly implemented\n//import ReviewCard from './ReviewCard'; // New component for individual reviews\n//import './Reviews.css';\n//\n//const Reviews = () => {\n//    const [reviews, setReviews] = useState([]);\n//    const [error, setError] = useState(null);\n//\n//    useEffect(() => {\n//        const getReviews = async () => {\n//            try {\n//                const reviewsData = await fetchReviews(); // Adjust to include token if needed\n//                setReviews(reviewsData);\n//            } catch (err) {\n//                setError(\"Failed to load reviews.\");\n//            }\n//        };\n//        getReviews();\n//    }, []);\n//\n//    return (\n//        <div className=\"reviews-container\">\n//            <h1>Your Reviews</h1>\n//            {error && <p className=\"error-message\">{error}</p>}\n//            {reviews.map(review => (\n//                <ReviewCard key={review.id} review={review} />\n//            ))}\n//        </div>\n//    );\n//};\n//\n//export default Reviews;\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReviewsPage = () => {\n  _s();\n  const [reviews, setReviews] = useState([]);\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const response = await axios.get('http://localhost:3000/api/reviews'); // Adjust the API endpoint as needed\n        setReviews(response.data); // Assuming response.data contains an array of reviews\n      } catch (error) {\n        console.error('Error fetching reviews:', error);\n      }\n    };\n    fetchReviews();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reviews-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Reviews\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), reviews.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: reviews.map(review => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: review.author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: review.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }, this)]\n      }, review.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No reviews available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(ReviewsPage, \"FPrwLLWcZBXrtWYcIRYMKBd2Ocw=\");\n_c = ReviewsPage;\nexport default ReviewsPage;\nvar _c;\n$RefreshReg$(_c, \"ReviewsPage\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","ReviewsPage","_s","reviews","setReviews","fetchReviews","response","get","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","review","author","content","id","_c","$RefreshReg$"],"sources":["C:/Users/abhis/Desktop/Google Integration portal/restaverse/frontend/src/components/ReviewsPage.js"],"sourcesContent":["//import React, { useEffect, useState } from 'react';\r\n//import { fetchReviews } from '../services/api'; // Ensure this is correctly implemented\r\n//import ReviewCard from './ReviewCard'; // New component for individual reviews\r\n//import './Reviews.css';\r\n//\r\n//const Reviews = () => {\r\n//    const [reviews, setReviews] = useState([]);\r\n//    const [error, setError] = useState(null);\r\n//\r\n//    useEffect(() => {\r\n//        const getReviews = async () => {\r\n//            try {\r\n//                const reviewsData = await fetchReviews(); // Adjust to include token if needed\r\n//                setReviews(reviewsData);\r\n//            } catch (err) {\r\n//                setError(\"Failed to load reviews.\");\r\n//            }\r\n//        };\r\n//        getReviews();\r\n//    }, []);\r\n//\r\n//    return (\r\n//        <div className=\"reviews-container\">\r\n//            <h1>Your Reviews</h1>\r\n//            {error && <p className=\"error-message\">{error}</p>}\r\n//            {reviews.map(review => (\r\n//                <ReviewCard key={review.id} review={review} />\r\n//            ))}\r\n//        </div>\r\n//    );\r\n//};\r\n//\r\n//export default Reviews;\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ReviewsPage = () => {\r\n    const [reviews, setReviews] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchReviews = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:3000/api/reviews'); // Adjust the API endpoint as needed\r\n                setReviews(response.data); // Assuming response.data contains an array of reviews\r\n            } catch (error) {\r\n                console.error('Error fetching reviews:', error);\r\n            }\r\n        };\r\n\r\n        fetchReviews();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"reviews-page\">\r\n            <h1>User Reviews</h1>\r\n            {reviews.length > 0 ? (\r\n                <ul>\r\n                    {reviews.map((review) => (\r\n                        <li key={review.id}>\r\n                            <h3>{review.author}</h3>\r\n                            <p>{review.content}</p>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            ) : (\r\n                <p>No reviews available.</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ReviewsPage;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACZ,MAAMS,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,mCAAmC,CAAC,CAAC,CAAC;QACvEH,UAAU,CAACE,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;MAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACnD;IACJ,CAAC;IAEDJ,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA;IAAKW,SAAS,EAAC,cAAc;IAAAC,QAAA,gBACzBZ,OAAA;MAAAY,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpBb,OAAO,CAACc,MAAM,GAAG,CAAC,gBACfjB,OAAA;MAAAY,QAAA,EACKT,OAAO,CAACe,GAAG,CAAEC,MAAM,iBAChBnB,OAAA;QAAAY,QAAA,gBACIZ,OAAA;UAAAY,QAAA,EAAKO,MAAM,CAACC;QAAM;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACxBhB,OAAA;UAAAY,QAAA,EAAIO,MAAM,CAACE;QAAO;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAFlBG,MAAM,CAACG,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGd,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,gBAELhB,OAAA;MAAAY,QAAA,EAAG;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC9B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACd,EAAA,CAjCID,WAAW;AAAAsB,EAAA,GAAXtB,WAAW;AAmCjB,eAAeA,WAAW;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}